extend type Query {

    user(
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    users(
      name: String @where(operator: "like")
    ): [User] @all

    me:User @auth

}

type Mutation {
  login(email:String!, password:String! ): String!

  createUser(
    name: String!,
    email: String!,
    password:String!,
  ): User! @create

  updateUser(
    id: ID!,
    name: String!,
    email: String!,
    password:String!,
  ): User @update


  deleteUser(id: ID! @whereKey): User @delete
}

input LoginInput {
    "Required email for login"
    email: String! @rules(apply: ["email"])
    "Password related to provided email"
    password: String! @rules(apply: ["min:8"])
}


"Account of a person who utilizes this application."
type User {    id: ID!
    name: String!
    email: String!
    email_verified_at: DateTime
    created_at: DateTime!
    updated_at: DateTime!
}
